##############
### Github ###
##############

EMAIL="62436169+sorrtory@users.noreply.github.com"
# That's why `get_secrets.sh` must be called first to get the ssh key for GitHub
GITHUB="git@github.com:sorrtory"
GITHUB_KEY="$HOME/Documents/secrets/.ssh/id_ed25519_github"

# Repositories to clone inside Documents from $GITHUB
REPOS_TO_CLONE=(
	"configs"
	"Knowledge-Database"
)

#############
### Links ###
#############

# The `link.sh` script will be executed on these two
LINK_TO_SSH="--home Documents/secrets/.ssh"

LINKS=(
	# Configs
    "--home Documents/configs/.zshrc"
    "--home Documents/configs/.vimrc"
	"Documents/configs/Knowledge-Database/.obsidian Documents/Knowledge-Database/.obsidian"
	"Documents/configs/mpv/"
	# Secrets
	"--sudo Documents/secrets/wireguard /etc/wireguard"
	# Scripts
	"--bin Documents/scripts/lofi.sh"
	"--bin Documents/scripts/sharekey.sh"
	"--bin Documents/scripts/cutname.sh"
	"--bin Documents/scripts/commit_info.sh"

)

######################
### External proxy ###
######################

VPN_PROFILES_FOLDER="$HOME/Documents/secrets/wireguard/"
VPN_DEFAULT_PROFILE="desktop-ubuntu"					  
VPN_CONTAINER_NAME="externalProxy"  # lxd proxy container name for WireGuard

#############
### Gnome ###
#############

# List of initial gsettings commands for Gnome customization
GSETTINGS_CMDS=(
	### Gnome General ###

	# Center new windows
	"gsettings set org.gnome.mutter center-new-windows true"

	# Set keyboard layout and input sources
	"gsettings set org.gnome.desktop.input-sources sources \"[('xkb', 'us'), ('xkb', 'ru')]\""
	"gsettings set org.gnome.desktop.input-sources xkb-options \"['grp:alt_shift_toggle']\""

	# Disable Gnome Desktop
	"gnome-extensions disable ding@rastersoft.com"

	### Gnome color theme ###
	"gsettings set org.gnome.desktop.interface gtk-theme 'Adwaita-dark'"
	# Adwaita doesn't support accent-color fully. Use Yaru theme
	# Also you can set gtk-application-prefer-dark-theme=1 in ~/.config/gtk-4.0/settings.ini
	# https://askubuntu.com/questions/769417/how-to-change-global-dark-theme-on-and-off-through-terminal
	"gsettings set org.gnome.desktop.interface accent-color 'orange'" 
	"gsettings set org.gnome.desktop.interface icon-theme 'Yaru-red-dark'"
	"gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark'"

	### Gnome Keybindings ###

	# Disable default win+n binding (to add custom keybinding)
	"gsettings set org.gnome.shell.keybindings focus-active-notification  '[\"disabled\"]'"

	# Move window left/right
	"gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-left \"['<Control><Super>Left']\""
	"gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-right \"['<Control><Super>Right']\""

	# Switch workspace left/right
	"gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-left \"['<Control><Alt>Left']\""
	"gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-right \"['<Control><Alt>Right']\""

	# Close window
	"gsettings set org.gnome.desktop.wm.keybindings close \"['<Super>q']\""

	### Ubuntu dock panel ###
	# Set dock position
	"gsettings set org.gnome.shell.extensions.dash-to-dock dock-position 'BOTTOM'"
	"gsettings set org.gnome.shell.extensions.dash-to-dock show-show-apps-button false"
	"gsettings set org.gnome.shell.extensions.dash-to-dock show-trash false"
	"gsettings set org.gnome.shell.extensions.dash-to-dock always-center-icons true"

	# Set dock Behaviour
	"gsettings set org.gnome.shell.extensions.dash-to-dock click-action 'minimize'"
	# Disable super+1.2.3... for dock launchers
	# https://askubuntu.com/questions/968103/disable-the-default-app-key-supernum-functionality-on-ubuntu-17-10-and-later
	# Switch to app looks useful. Let's try to keep it (the command bellow disables it)
	# gsettings set org.gnome.shell.keybindings switch-to-application-1 [] # Repeat for 1-9
	"gsettings set org.gnome.shell.extensions.dash-to-dock hot-keys false"

	# # ? This is controversial Transparent+Autohide
	# "gsettings set org.gnome.shell.extensions.dash-to-dock autohide true"
	# "gsettings set org.gnome.shell.extensions.dash-to-dock intellihide true"
	# "gsettings set org.gnome.shell.extensions.dash-to-dock dock-fixed false"
	# "gsettings set org.gnome.shell.extensions.dash-to-dock intellihide-mode 'ALL_WINDOWS'"
	# "gsettings set org.gnome.shell.extensions.dash-to-dock extend-height true"

	# # Set dock Transparency
	# "gsettings set org.gnome.shell.extensions.dash-to-dock transparency-mode 'DYNAMIC'"
	# "gsettings set org.gnome.shell.extensions.dash-to-dock customize-alphas true"
	# "gsettings set org.gnome.shell.extensions.dash-to-dock min-alpha 0.0"
	# "gsettings set org.gnome.shell.extensions.dash-to-dock max-alpha 0.8"

	# * This is more tidy panel setup
	"gsettings set org.gnome.shell.extensions.dash-to-dock extend-height false"
	"gsettings set org.gnome.shell.extensions.dash-to-dock dock-fixed false"


)

#########################
### Gnome keybindings ###
#########################

# This is a list of custom hotkeys
# * If the shortcut is already used the script will append them anyway.
# If there it overlaps with system default, you have to disable using gsettings
# 1. Find an overlapping keybinding using gnome settings
# 2. Find a dconf name with - gsettings list-keys org.gnome.shell.keybindings, etc. (there are many)
# 3. Disable with - gsettings set org.gnome.shell.keybindings screenshot '["disabled"]'


# [<Name>]="<Command to launch>"|"<Keybinding>"
declare -A CUSTOM_LAUNCHERS=(
		[firefox]="firefox|<Super>f"
		[code]="code|<Super>c"
		[typing]="subl|<Super>t"
		[obsidian]="obsidian|<Super>n"
		[explorer]="nautilus -w|<Super>e"
	)

########################
### Gnome extensions ###
########################

# <extension_name> - Check in extension manager
# <extension_id>   - Check on https://extensions.gnome.org/
# [<extension_name>]="<extension_id>"
declare -A ADD_EXTENSIONS=(	
	[blur-my-shell@aunetx]="3193" 			# Blur my shell
	[clipboard-indicator@tudmotu.com]="779" # Clipboard Indicator
	[hidetopbar@mathieu.bidon.ca]="545"     # Hide Top Bar
)


################
### Commands ###
################

# ? May it be unnecessary untill you use conf for Arch
INSTALL_CMD="sudo apt install -y"
UPDATE_CMD="sudo apt update -y"
ADD_REPO_CMD="sudo add-apt-repository -y"

################
### Packages ###
################


# Package repositories that are added before installing packages with $ADD_REPO_CMD
# Would be added on --pkgs
PKG_REPOS=(
	"ppa:tomtomtom/yt-dlp"
)

# Platform native packages installing with $INSTALL_CMD
# Would be installed on --pkgs
PKGS=(
	# Base packages
	"git"
	"curl"
	"wget"
	"gpg"
	"mpv"
	"yt-dlp"
	"vim"
	"firefox"
	"imagemagick"
	"transmission"
	"audacity"
	"libreoffice"
	# Additional tools
	"zsh"
	"fzf"
	"tldr"
	"htop"
	"bat"
	"screen"
	"tmux"
	"httpie"
	# Dependencies
	"gcc"
	"make"
	"g++"
	"software-properties-common"
	"apt-transport-https"
	"default-jre"
	"default-jdk"
	"gnome-tweaks"
	"gnome-shell-extension-manager"
	"dconf-editor"
)

#############
### Snaps ###
#############

# `snap install` acts strange, can't pass --<arg> directly
# Need a dict to work with few args
# Would be installed on --snaps
declare -A SNAP_PKGS=(
	[lxd]=""
	[postman]=""
	[obsidian]="--classic"
)

########################
### Special Packages ###
########################

# This is the list of programs that can't be installed easily with $INSTALL_CMD
# Dict: <cmd_to_check>:<install_function>
# 
declare -A SPECIAL_PKGS=(
	["go"]="install_golang"
	["docker"]="install_docker"
	["google-chrome"]="install_chrome"
	["code"]="install_code"
	["subl"]="install_sublime"
	["smerge"]=""             			# Installs with sublime text
	["dbeaver-ce"]="install_dbeaver"
	["spotify"]="install_spotify"
)

# You are free to add more install_<name> functions here, just `export -f` them