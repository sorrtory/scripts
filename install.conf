##############
### Github ###
##############

EMAIL="62436169+sorrtory@users.noreply.github.com"
# That's why `get_secrets.sh` must be called first to get the ssh key for GitHub
GITHUB="git@github.com:sorrtory"
GITHUB_KEY="$HOME/Documents/secrets/.ssh/id_ed25519_github"

# Repositories to clone inside Documents from $GITHUB
REPOS_TO_CLONE=(
	"configs"
	"Knowledge-Database"
)

#############
### Links ###
#############

# The `link.sh` script will be executed on this
LINKS=(
	# Configs
    "--home Documents/configs/.zshrc"
    "--home Documents/configs/.vimrc"
	"Documents/configs/Knowledge-Database/.obsidian Documents/Knowledge-Database/.obsidian"
	"Documents/configs/mpv/"
	# Secrets
	# "--home Documents/secrets/.ssh" # Should already be handled in bootstrap.sh
	"--sudo Documents/secrets/wireguard /etc/wireguard"
	# Scripts
	"--bin Documents/scripts/lofi.sh"
	"--bin Documents/scripts/sharekey.sh"
	"--bin Documents/scripts/cutname.sh"
	"--bin Documents/scripts/commit_info.sh"

)

######################
### External proxy ###
######################

VPN_PROFILES_FOLDER="$HOME/Documents/secrets/wireguard/"
VPN_DEFAULT_PROFILE="desktop-ubuntu"					  
VPN_CONTAINER_NAME="externalProxy"  # lxd proxy container name for WireGuard

################
### Keybinds ###
################

# [<Name>]="<Command to launch>"|"<Keybinding>"
declare -A CUSTOM_LAUNCHERS=(
		[firefox]="firefox|<Super>f"
		[code]="code|<Super>c"
		[terminal]="gnome-terminal|<Super>t"
		[typing]="subl|<Super>t"
		[obsidian]="obsidian|<Super>n"
	)

################
### Commands ###
################

# ? May it be unnecessary untill you use conf for Arch
INSTALL_CMD="sudo apt install -y"
UPDATE_CMD="sudo apt update -y"
ADD_REPO_CMD="sudo add-apt-repository -y"

################
### Packages ###
################


# Package repositories that are added before installing packages with $ADD_REPO_CMD
# Would be added on --pkgs
PKG_REPOS=(
	"ppa:tomtomtom/yt-dlp"
)

# Platform native packages installing with $INSTALL_CMD
# Would be installed on --pkgs
PKGS=(
	# Base packages
	"git"
	"curl"
	"wget"
	"gpg"
	"mpv"
	"yt-dlp"
	"vim"
	"firefox"
	"imagemagick"
	"transmission"
	"audacity"
	"libreoffice"
	# Additional tools
	"zsh"
	"fzf"
	"tldr"
	"htop"
	"bat"
	"screen"
	"tmux"
	"httpie"
	# Dependencies
	"gcc"
	"make"
	"g++"
	"software-properties-common"
	"apt-transport-https"
	"default-jre"
	"default-jdk"
	"gnome-tweaks"
	"gnome-shell-extension-manager"
	"dconf-editor"
)

#############
### Snaps ###
#############

# `snap install` acts strange, can't pass --<arg> directly
# Need a dict to work with few args
# Would be installed on --snaps
declare -A SNAP_PKGS=(
	[lxd]=""
	[postman]=""
	[obsidian]="--classic"
)

########################
### Special Packages ###
########################

# This is the list of programs that can't be installed easily with $INSTALL_CMD
# Dict: <cmd_to_check>:<install_function>
# 
declare -A SPECIAL_PKGS=(
	["go"]="install_golang"
	["docker"]="install_docker"
	["google-chrome"]="install_chrome"
	["code"]="install_code"
	["subl"]="install_sublime"
	["smerge"]=""             			# Installs with sublime text
	["dbeaver-ce"]="install_dbeaver"
	["spotify"]="install_spotify"
)

# You are free to add more install_<name> functions here, just `export -f` them